
비트 연산자

unsigned char num1 = 1;	// 0000 0001
unsigned char num2 = 3;	// 0000 0011
 
printf("%d\n", num1 & num2);	// 0000 0001: 01과 11을 비트 AND하면 01이 됨
printf("%d\n", num1 | num2);		// 0000 0011: 01과 11을 비트 OR하면 11이 됨
printf("%d\n", num1 ^ num2);	// 0000 0010: 01과 11을 비트 XOR하면 10이 됨

---------------------------------------------------------------------------------------------------------

시프트 연산자

unsigned char num1 = 3;	//  3: 0000 0011
unsigned char num2 = 24;	//  24: 0001 1000
printf("%u\n", num1 << 3);	//  24: 0001 1000 : num1의 비트 값을 왼쪽으로 3번 이동
printf("%u\n", num2 >> 2);	//  6: 0000 0110 : num2의 비트 값을 오른쪽으로 2번 이동


출처 : https://dojang.io/mod/page/view.php?id=173
https://dojang.io/mod/page/view.php?id=174

